# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import TdxReader_pb2 as TdxReader__pb2


class TdxReaderStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Hello = channel.unary_unary(
                '/tdxreader.TdxReader/Hello',
                request_serializer=TdxReader__pb2.HelloRequest.SerializeToString,
                response_deserializer=TdxReader__pb2.HelloReply.FromString,
                )
        self.ReadTdxFile = channel.unary_unary(
                '/tdxreader.TdxReader/ReadTdxFile',
                request_serializer=TdxReader__pb2.ReadTdxFileRequest.SerializeToString,
                response_deserializer=TdxReader__pb2.TdxFileData.FromString,
                )


class TdxReaderServicer(object):
    """The greeting service definition.
    """

    def Hello(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadTdxFile(self, request, context):
        """Read tdx local file
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TdxReaderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Hello': grpc.unary_unary_rpc_method_handler(
                    servicer.Hello,
                    request_deserializer=TdxReader__pb2.HelloRequest.FromString,
                    response_serializer=TdxReader__pb2.HelloReply.SerializeToString,
            ),
            'ReadTdxFile': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadTdxFile,
                    request_deserializer=TdxReader__pb2.ReadTdxFileRequest.FromString,
                    response_serializer=TdxReader__pb2.TdxFileData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tdxreader.TdxReader', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TdxReader(object):
    """The greeting service definition.
    """

    @staticmethod
    def Hello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tdxreader.TdxReader/Hello',
            TdxReader__pb2.HelloRequest.SerializeToString,
            TdxReader__pb2.HelloReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadTdxFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tdxreader.TdxReader/ReadTdxFile',
            TdxReader__pb2.ReadTdxFileRequest.SerializeToString,
            TdxReader__pb2.TdxFileData.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
